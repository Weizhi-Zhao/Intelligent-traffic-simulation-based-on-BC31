#ifndef __3DIMEN__
#define __3DIMEN__

//#include ".h"
#include "mouse1.h"
#include "textedit.h"

typedef struct
{
	//float centrePosition[3];
	float *originDotID[4];
	//ï¿½ï¿½Æ½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¸ï¿½ï¿½ï¿½(ï¿½ï¿½Ê¼) 
	float *finalDotID[4];
	//ï¿½ï¿½Æ½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¸ï¿½ï¿½ï¿½(ï¿½ï¿½ï¿½ï¿½) 
	float coffiecient[3];
	//Æ½ï¿½ï¿½Ïµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ 
} planeInfo;
//ï¿½ï¿½ï¿½ï¿½Æ½ï¿½ï¿½ï¿½ï¿½Ï¢ 

typedef struct
{
	float centrePosition[4];
	float finalCentrePosition[4];
	//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Î»ï¿½ï¿½
	planeInfo planeInformation[6];
	//ï¿½ï¿½ï¿½ï¿½Æ½ï¿½ï¿½ï¿½ï¿½Ï¢ 
	float originCoordinate[8][4];
	float relaCoordinate[8][4];
	float finalCoordinate[8][4];
	//ï¿½ï¿½ï¿½Õ¸ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Î»ï¿½Ã¾ï¿½ï¿½ï¿½
	float length;
	float width;
	float height;
	float angle;//ï¿½ï¿½Â¼ï¿½ï¿½×ªï¿½Ä½Ç¶ï¿½ 
} bodyInfo;
//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ï¢ 

typedef struct
{
	float u0, u1, u2;
	float V[4];
	//ï¿½Û²ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ 
	float focusPoint[3];
	//×¢ï¿½Óµï¿½ 
    float uAxis[4];
	//uï¿½ï¿½
    float nAxis[4];
	//nï¿½ï¿½ ï¿½ï¿½Ô¶Ö¸ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ÏµÔ­ï¿½ï¿½ 
    float vAxis[4];
	//vï¿½ï¿½ ï¿½ï¿½Ô¶ï¿½ï¿½Ö±ï¿½ï¿½uï¿½ï¿½ï¿½nï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Æ½ï¿½ï¿½ 
    float eye[4];
	//ï¿½Û²ï¿½ï¿½ï¿½ï¿½ï¿½ÏµÔ­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ïµï¿½Ðµï¿½Î»ï¿½ï¿½ 
    float change[4][4];
	//ï¿½Ó½Ç±ä»»ï¿½ï¿½ï¿½ï¿½
	float maganification;
	//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Å´ï¿½ï¿½ï¿½ 
} coordinateSystem;

//ÈýÎ¬ÏµÍ³³õÊ¼»¯ 
void ThreeDInit(MouseState *mouse, TextEdit *textEdit);

//ÈýÎ¬ÏµÍ³Ö÷º¯Êý 
void ThreeDMain(MouseState *mouse, int lightTime, int carNum, float carSpeed, float busSpeed);

float DotMultiply(float a[], float b[]);
//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ 

void CoordinateChange(float a[], float b[][4], float c[]);
//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ïµï¿½ï¿½Îªï¿½Û²ï¿½ï¿½ï¿½ï¿½ï¿½Ïµ

void ConnectDots(bodyInfo *body, coordinateSystem *coordinate, int color, int lcolor);
//ï¿½ï¿½ï¿½ï¿½Í¶Ó°ï¿½ï¿½Í¼ï¿½ÐµÄ¸ï¿½ï¿½ï¿½ 

void ChangeMatrixInit(float change[][4]); 
//ï¿½ä»»ï¿½ï¿½ï¿½ï¿½ï¿½Ê¼ï¿½ï¿½ 

void VectorSet(float target[], float a, float b, float c, float d);
//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê¼ï¿½ï¿½

void CoordinateInit(coordinateSystem *coordinate);
//ï¿½ï¿½Î¬ï¿½ä»» 

void ChangeView(void *coordinate, void *key);
//ï¿½ï¿½×ªï¿½Ó½ï¿½ 

void CalUVN(coordinateSystem *coordinate);
//ï¿½ï¿½ï¿½ï¿½UVNï¿½ï¿½ï¿½áµ¥Î»ï¿½ï¿½ï¿½ï¿½

void GiveUnit(coordinateSystem *coordinate);
//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ãµï¿½Î»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ä»»ï¿½ï¿½ï¿½ï¿½ 

void CalPlaneCoffiecient(planeInfo *planeInformation);
//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Æ½ï¿½ï¿½Ïµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ 

planeInfo PlaneInfoInit(float *originA, float *originB, float *originC, float *originD, float *finalA, float *finalB, float *finalC, float *finalD);
//ï¿½ï¿½ï¿½ï¿½Æ½ï¿½ï¿½ï¿½ï¿½Ï¢ï¿½ï¿½Ê¼ï¿½ï¿½ 

void BodyInfoInit(bodyInfo *body, float length, float width, float height, float cenX, float cenY, float cenZ, float vecX, float vecY, float vecZ);
//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ï¢ï¿½ï¿½Ê¼ï¿½ï¿½ 

void DrawPlane(planeInfo *plane, coordinateSystem *coordinate, int color, int lcolor);
//ï¿½ï¿½Æ½ï¿½ï¿½ 

void FocusChange(void *coordinate, void *key);
//ï¿½Ó½ï¿½×¢ï¿½Óµï¿½ä»»(Æ½ï¿½ï¿½) 

void ZoomInAndOut(void *coordinate, void *key);
//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ 

void Translation(bodyInfo *body, float finalX, float finalY, float finalZ);
//ï¿½ï¿½ï¿½ï¿½Æ½ï¿½ï¿½ 

void BodyPlaneCal(bodyInfo *body);
//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Æ½ï¿½æ·¨ï¿½ï¿½ï¿½ï¿½ 

void BodyPointCal(bodyInfo *body);
//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ 

void OriginBodyPointCal(bodyInfo *body);
//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ 

void Spin(bodyInfo *body, float angle);
//ï¿½ï¿½×ªï¿½ï¿½ï¿½ï¿½

void SpinPoint(float point[], float angle);
//ï¿½ï¿½×ªï¿½ï¿½ 

#endif 
